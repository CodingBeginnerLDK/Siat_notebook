CSS

Selector : 꾸며주는 대상을 선택
CSS Syntax : selector{property:value;}
요소=태그

class가 우선 선택이 됨
우선 순위
id > class

+ : Sibiling 관계, 자손 사이에 뭐가 들어가면 그 위까지 적용
~ : 동생들, 자손 사이에 뭐가 들어가도 적용
^ : 접두어
$ : 접미어
* : 이건 최소화 쓰는게 좋음

- 속성명^를 이용한 선택은 a태그와 함께 사용하면 효율적이다. 부가적으로 img 태그에 적용
- 속성명$를 이용한 선택은 가능하면 img태그와 함께 사용하면 효율적이다. 부가적으로 a태그에 적용
- 프로젝트에서 이미지 파일은
1)폴더를 통해서 각각의 용도별, 영역별로 구분해준다.
2)이미지 파일은 이름에 접두어 or 접미어 or 접두접미어(혼용)해서 용도별, 영역별 구분을 해준다.
=> 백엔드 프로그램에 의해서 각각의 파일들을 분류해서 각각의 목적에 맞는 목록을 추출할 수 있고,
=> 추출된 자료를 이용해서 프론트 단에서 이를 동적으로 자동화 할 수 있다.(No 100%)
=> 소스의 수정을 실시간으로 반영 할 수 있다.
=> "LDK".startsWith("LD") -> True

스타일을 외부 파일로 만드는 이유
- 재사용성 => 여러 웹 문서에서 공통적으로 사용되는 부분들을 표준화해서 정의한다.
모든 웹문서의 스타일을 통일 : 초기화(reset.css, normalize.css)
모든 페이지에 공통적으로 들어가는 헤더,푸터,글로벌 네비게이션 etc... 분리해서 하나의 외부 스타일로 정의해두고 재사용한다.

- 분리 : html문서를 컨텐츠의 내용만을 정의하고 스타일과 동적 프로그래밍은 독립된 파일의 형태로 분리
style 태그를 이용한 스타일 정의(아웃라인 방식의 스타일 정의)
태그의 style 속성을 이용해서 스타일 정의(인라인 방식의 스타일 정의)
가장 강력한 스타일 정의 방법 : 인라인-> 외부, 아웃라인방식의 스타일을 무시, 프로그래밍을 이용한 스타일 정의가 인라인 방식에 가장 가까움

1. 컴퓨터가 이진법을 사용한다는데 이것을 사용하지 않고, 4진법을 사용한다면?
2. i=10과 탐색기의 관계?
3. 왜 컴퓨터는 이진법을 쓰는까?

입출력 : 데이터를 주기억장치로 가져오거나 주기억장치에 저장된 자료를 보내는 것
입출력의 자료는 문자의 묶음이다.
문자자료 => 1개의 문자, ex) char ''
묶음 => 개수

char aaa=''; Error => 단 1개의 문자로 선언해야함
String aaa=""; No Error => 문자열(String)이므로 0개 이상의 문자들으로 구성 가능

기본타입 : 단일자료
참조타입 : 묶음자료
- 123 => 정수타입 자료
- `12.25 => 실수타입 자료
- 'A' => 문자타입 자료
- "123AB" => 문자 묶음(문자열) 자료
- {1,2,3,4,5} => 숫자 묶음(배열 배열) => 참조타입
- 문자들을 묶어놓으면 문자열, 문자배열은 곧 문자열

객체 : 자료(묶음형), 필드+메소드

class Test{
	int numData = 10;
	String name = "LDK";
	public void toStringPrn(){
		System.out.println(name + "영구없다" + numData);
	}
} //Test라는 클래스는 2개의(서로 다른 종류의 관련성 있는 숫자 자료 1개 ,문자열 자료 1개)와 1개의 메소드로 묶어서(관련성이 있다) 표현한 자료 타입이다.
=> 개발자가 필요에 의해서 정의한 묶음 자료이다. 

public void main(){
	
}
2의 4성 => 16비트
2의 8성 => 64비트

bit, byte, word(Double, Quad , Normal)
word -> field -> record -> file -> folder

과제 : CSS w3스쿨에서 어드밴스 예제 정리 및 분석


22.03.07
자료 - immutable : 보안 안전, MultiThread에 강함
Data - mutable

primitive type - single
object type - 묶음

연산자는 결과를 반환한다 => 연산자에 따라서 타입이 결정된다. => 사칙연산자는 결과를 반환하는데 숫자타입을 반환한다.

임의의 진법의 숫자를 입력받아서 임의의 진법의 숫자로 출력하는 프로그램을 작성하시오.

왜 자바스크립트는 숫자 및 문자 자료가 단순할까?
숫자는 number타입이다.
문자열만 존재한다.

var => 호이스팅되는 경우가 있음. 즉 loacl -> global로 끌어올릴 수가 있는 상황이 발생. 에러가 안나도 원하는 값이 안나올 수도 있다.

호이스팅 => 메모리에 상자가 만들어졌는가

변수에 저장하지 않고도 배열은 선언과 동시에 곧바로 접근 연산자를 이용해서 사용할 수 있다.
=> 거의 없지만 사용할 수도 있다.

객체는 변수에 저장하지 않고, 생성과 동시에 곧바로 접근 연산자를 이용해서 사용할 수 없다. 배열과의 차이점

자료를 재사용하기 위해서는 반드시 메모리에 자료를 만들고 이를 접근할 수 있는 정보(변수)가 필요하다.

왜 자료를 변수에 담아서 사용할까?
=> 재사용(반복사용), 변수에 담지 않으면 재사용이 불가능